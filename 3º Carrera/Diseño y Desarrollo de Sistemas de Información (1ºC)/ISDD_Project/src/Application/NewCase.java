/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Application;

import Persistence.OracleConnection;
import Persistence.Policialcase;
import Persistence.PolicialcaseManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Contains the User Interface for managing the cases and all the methods to do so
 * @author Álvaro Esteban Muñoz
 */
public class NewCase extends javax.swing.JFrame {
    
    private final OracleConnection c;   // Conecction to the DB
    private PolicialcaseManager cm = null;  // Manager to the DB
    protected final DefaultTableModel tmodel = new DefaultTableModel(); // Model of the table to be shown
    
    /**
     * Creates new form NewExpert
     * @param c Conecction to the DB
     */
    public NewCase(OracleConnection c) {
        initComponents();
        this.c = c;
        cm = new PolicialcaseManager(c);
        this.setTitle("Policial Cases");    
        
        // Initialize the table with the values of the DB
        setColumnNames();
        
        try{
            // Inicialize the tuples
            viewCases();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    /**
     * Set the name of the columns of the table
     */
    private void setColumnNames() {
        CasesTable.setModel(tmodel);
        String[] columns = {"Code", "Name", "Start Date", "End Date"};
        tmodel.setColumnIdentifiers(columns);
                
        CasesTable.getTableHeader().setResizingAllowed(false);
        
        CasesTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        CasesTable.getColumnModel().getColumn(1).setPreferredWidth(140);
        CasesTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        CasesTable.getColumnModel().getColumn(3).setPreferredWidth(100);
    }
    
    /**
     * Shows the cases on the table
     * @throws SQLException 
     */
    private void viewCases () throws SQLException {
        ArrayList<Policialcase> listCase = cm.casesList();
        fillCasesTable(listCase);
    }
    
    /**
     * Fill the table with the arrayList of cases passed
     * @param listCase List of cases to be shown on the table
     */
    private void fillCasesTable (ArrayList<Policialcase> listCase) {
        Object[] columna = new Object[4];
        int numRegistros = listCase.size();
        int numRows = tmodel.getRowCount();
        
        // Borra todas las filas de la tabla
        for (int i = numRows-1; i >= 0; i--) {
           tmodel.removeRow(i);
        }
        
        // Rellena las filas de la tabla con el array pasado por parámetro
        for (int i = 0; i < numRegistros; i++) {
            columna[0] = listCase.get(i).getCodCaso();
            columna[1] = listCase.get(i).getNombre();
            columna[2] = listCase.get(i).getFechaInicio();
            columna[3] = listCase.get(i).getFechaFin();
            tmodel.addRow(columna);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        ScrollPane = new javax.swing.JScrollPane();
        CasesTable = new javax.swing.JTable();
        CodeField = new javax.swing.JTextField();
        NameField = new javax.swing.JTextField();
        StartDateField = new javax.swing.JTextField();
        EndDateField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NewButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CasesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CodCase", "Name", "Start Date", "End Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane.setViewportView(CasesTable);

        jLabel1.setText("CodCase");

        jLabel2.setText("Name");

        jLabel3.setText("Start Date");

        jLabel4.setText("End Date");

        NewButton.setText("New");
        NewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(11, 11, 11)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NameField)
                                    .addComponent(CodeField)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SaveButton)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(EndDateField)
                                    .addComponent(StartDateField))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CodeField)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(NameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StartDateField)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EndDateField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewButton)
                    .addComponent(DeleteButton)
                    .addComponent(RefreshButton)
                    .addComponent(SaveButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewButtonActionPerformed
        if (CodeField.getText().equals("")  ||
            NameField.getText().equals("")  ||
            StartDateField.getText().equals("")  ||
            EndDateField.getText().equals("") ) {
            JOptionPane.showMessageDialog(null ,"ERROR: All fields must be filled");
        } else {
            // Create an auxiliar expert
            Object[] newRow = new Object[4];
            Policialcase auxCase = new Policialcase();
            
            newRow[0] = CodeField.getText();
            newRow[1] = NameField.getText();
            newRow[2] = StartDateField.getText();
            newRow[3] = EndDateField.getText();

            tmodel.addRow(newRow);
            
            auxCase.setCodCaso(CodeField.getText());
            auxCase.setNombre(NameField.getText());
            auxCase.setFechaInicio(StartDateField.getText());
            auxCase.setFechaFin(EndDateField.getText());
        
            cm.insertCase(auxCase);
        }
    }//GEN-LAST:event_NewButtonActionPerformed

    /**
     * Removes a selected case
     * @param evt 
     */
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        
        boolean succed = false;
        
        // Remove from the DB
        succed = cm.borraCaso((String)tmodel.getValueAt(CasesTable.getSelectedRow(), 0));
            
        // Remove from the table
        tmodel.removeRow(CasesTable.getSelectedRow());
        
        if (!succed) {
            JOptionPane.showMessageDialog(null, "ERROR: The case was not deleted correctly.");
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    /**
     * Refresh the data of the table
     * @param evt 
     */
    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        
        try {
            // If changes are not saved, then we rollback
            c.endfTransaccionRollback();
            viewCases();
        } catch (SQLException ex) {
            Logger.getLogger(NewExpert.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefreshButtonActionPerformed

    /**
     * Save all the changes to the DB
     * @param evt 
     */
    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        c.endTransaccionCommit();
    }//GEN-LAST:event_SaveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CasesTable;
    private javax.swing.JTextField CodeField;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField EndDateField;
    private javax.swing.JTextField NameField;
    private javax.swing.JButton NewButton;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JTextField StartDateField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
