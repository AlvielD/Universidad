/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package APP;

import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import java.rmi.registry.LocateRegistry;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author aeste
 */
public class mainAPP extends java.awt.Frame {

    private static final int NUM_CLIENTES = 10; // Número de clientes a generar por la aplicación
    private static final int ANCHO=900;
    private static final int ALTO=600;
    
    /**
     * Creates new form mainAPP
     */
    public mainAPP() {
        initComponents();
        setVisible(true);
        setSize(ANCHO, ALTO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            
            // Inicializamos la parte visual
            mainAPP frame = new mainAPP();
            Canvas can = new Canvas(ANCHO, ALTO);
            frame.add(can);
            
            Monitor mon = new Monitor(can);    // Creamos el monitor que pasaremos a los hilos
        
            Registry registro = LocateRegistry.createRegistry(2000);
            registro.rebind("MonitorRemoto", mon);
        } catch (RemoteException e) {
            System.out.println("Error de conexión");
        } catch (IOException ex) {
            Logger.getLogger(mainAPP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
