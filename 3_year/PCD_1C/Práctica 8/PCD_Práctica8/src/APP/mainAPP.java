/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package APP;

import java.math.MathContext;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author aeste
 */
public class mainAPP extends java.awt.Frame {

    private static final int NUM_CLIENTES = 10; // Número de clientes a generar por la aplicación
    private static final int ANCHO=900;
    private static final int ALTO=600;
    
    /**
     * Creates new form mainAPP
     */
    public mainAPP() {
        initComponents();
        setVisible(true);
        setSize(ANCHO, ALTO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        // Inicializamos la parte visual
        mainAPP frame = new mainAPP();
        Canvas can = new Canvas(ANCHO, ALTO);
        frame.add(can);
        
        Monitor mon = new Monitor(can);    // Creamos el monitor que pasaremos a los hilos
        Random r = new Random(System.currentTimeMillis());
        Thread[] hilos = new Thread[NUM_CLIENTES];
        
        // Generamos y lanzamos los hilos
        for (int i = 0; i < NUM_CLIENTES; i++) {
            if ((r.nextInt(20)+1) <= 13)    // 13/20 --> 65%
                hilos[i] = new C_NotaSimple(mon);
            else                            // 7/20 --> 35%
                hilos[i] = new Thread(new C_Registro(mon));
            
            hilos[i].start();
            
            // Intervalo de entre 1 y 2 segundos
            try {
                Thread.sleep((r.nextInt(2)+1)*1000);
            } catch (InterruptedException ex) {
            }
        }
        
        // Esperamos a que finalizen los hilos
        for (int i = 0; i < NUM_CLIENTES; i++) {
            try {
                hilos[i].join();
            } catch (InterruptedException ex) {
            }
        }
        System.out.println("Todos los hilos han terminado");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
