/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Application;

import Persistence.CollaboratesManager;
import Persistence.Expert;
import Persistence.ExpertManager;
import Persistence.OracleConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Contains the view and all the methods to manage the collaborations with an
 * expert code given
 * @author Álvaro Esteban Muñoz
 */
public class ManageByExpert extends javax.swing.JFrame {

    private DefaultTableModel tModel = new DefaultTableModel();  
    private OracleConnection c;
    private CollaboratesManager cm;
    private ExpertManager em;
    
    /**
     * Creates new form ManageCollabMenu
     * @param c Conecction to the database
     */
    public ManageByExpert(OracleConnection c) {
        
        try {
            this.c = c;
            cm = new CollaboratesManager(c);
            em = new ExpertManager(c);
            
            ResultSet listDesc = cm.getDescExp();
            ArrayList<Expert> listExp = em.expertList();
            
            initComponents();
            // We set the column names
            comboBoxItems(listExp);
            setColumnNames();
            
            String ExpName = (String)jComboBox1.getSelectedItem();
            fillDescriptionTable(listDesc, ExpName);
        } catch (SQLException ex) {
            Logger.getLogger(ManageByExpert.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            this.dispose();
        }
    }
    
    /**
     * Set the items of the comboBox
     * @param listExp
     * @throws SQLException 
     */
    private void comboBoxItems(ArrayList<Expert> listExp) throws SQLException {
        
        for (int i = 0; i<listExp.size(); i++) {
            jComboBox1.addItem(listExp.get(i).getName());
        }
    }
    
    /**
     * Set the names of the columns of the table
     */
    private void setColumnNames() {
        jTable1.setModel(tModel);
        String[] columns = {"Collaboration Descriptions"};
        tModel.setColumnIdentifiers(columns);
                
        jTable1.getTableHeader().setResizingAllowed(false);
    }
    
    /**
     * Fill the table with the result given
     * @param listDesc Resultset given from the database with the description
     * to fill the table with
     * @param ExpName Name of the expert requested
     */
    private void fillDescriptionTable (ResultSet listDesc, String ExpName) {
        Object[] columna = new Object[1];
        int numRows = tModel.getRowCount();

        for (int i = numRows-1; i >= 0; i--) {
           tModel.removeRow(i);
        }
        
        try{
            while(listDesc.next()) {
                columna[0] = listDesc.getString(2);
                if (listDesc.getString(1).contains(ExpName))
                    tModel.addRow(columna);
            }
        } catch (Exception ex) {
           JOptionPane.showMessageDialog(null, "There was a connection error");
        } finally {
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel1.setText("Expert");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Collaborations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Performs the action of refreshing the table if the name of the expert
     * in the comboBox is changed
     * @param evt 
     */
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        String ExpName = (String)jComboBox1.getSelectedItem();
        ResultSet listDesc = cm.getDescExp();
        fillDescriptionTable(listDesc, ExpName);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
